{"version":3,"sources":["snake/styles.module.scss","pacman/styles.module.scss","wordament/styles.module.scss","arrow/index.js","sling/index.js","snake/index.js","pacman/index.js","wordament/index.js","universe/index.js","serviceWorker.js","carousel/Block/index.js","carousel/Flex/index.js","carousel/index.js","filter.jsx","lc/index.jsx","index.js"],"names":["module","exports","Image","slab1Position","x","y","slab2Position","Slab","engine","position","positionIndex","movement","changePosition","pos","diff","moveTo","setTimeout","moveSlab","Body","setPosition","body","window","innerHeight","this","myEngine","Bodies","rectangle","innerWidth","isStatic","World","add","world","slab","direction","requestAnimationFrame","move","translate","moveDown","Jump","props","myRender","myWorld","myPlayer","isJumping","slab1","slab2","createLevel","boxA","inertia","Infinity","render","sprite","texture","xScale","yScale","document","addEventListener","jumpme","checkDead","isDead","alert","createCompound","wallTop","wallBottom","wallLeft","wallRight","e","resetPlayer","setVelocity","set","checkDirection","velocity","isSlabColliding","setState","score","state","slabCollided","bounds","min","Matter","SAT","collides","max","intro","Engine","create","Render","element","ele","options","width","height","background","wireframes","run","top","left","right","textAlign","color","margin","padding","style","backgroundImage","backgroundSize","ref","border","Component","Height","Width","isSmall","ScoreOject","isSensor","posY","Math","floor","random","circle","label","fillStyle","toString","Sling","rockPosY","rockOptions","density","rock","polygon","elastic1","Constraint","pointA","bodyB","stiffness","type","strokeStyle","elastic2","mouse","Mouse","canvas","mouseConstraint","MouseConstraint","constraint","visible","_self","Events","on","button","i","pairs","bodyA","Boundary","Food","Snake","checkMove","snake","isHittingBoundary","console","log","canMove","isOverlap","ate","length","first","checkIsFood","unshift","pop","getStyle","j","getBoundary","bottom","push","className","styles","box","rocks","join","setDirection","loopMe","setInterval","clearInterval","disabled","pointerEvents","opacity","game","marginBottom","board","map","arr","food","controls","up","onClick","down","Pacman","constructBoundary","fillBlocks","blocks","enemy","player","index","path","updateMove","count","val","isPlayer","isEnemy","getBlock","Array","from","fill","Len","rows","cols","Wordament","fillWords","letter","filled","active","touching","includes","getElement","touches","clientX","clientY","elementFromPoint","innerText","id","startTouch","endTouch","checkWord","words","found","onTouchStart","onTouchEnd","onTouchMove","onMouseEnter","key","Universe","getElementById","classList","remove","landOn","back","Boolean","location","hostname","match","Data","img","name","Block","src","Flex","Carousel","Filter","counter","data","screen_url","split","b","c","d","v2","k","indexOf","reduce","a","LC","updateValue","value","script","onHit","filter","handleSL","date","Date","pl","hit","getDate","getMonth","getFullYear","undefined","onDoubleClick","bt3","onChange","target","bt2","bt1","ba","sl","sb","st1","st2","st3","sum","comm","App","Intro","page","React","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90a1846f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"styles_game__23AwV\",\"board\":\"styles_board__1lPwP\",\"box\":\"styles_box__uRXjc\",\"rocks\":\"styles_rocks__3Md-r\",\"snake\":\"styles_snake__325_e\",\"food\":\"styles_food__3Muau\",\"controls\":\"styles_controls__2anuZ\",\"left\":\"styles_left__1QDJ0\",\"right\":\"styles_right__nTTwo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"styles_game__3OaqG\",\"board\":\"styles_board__2zmcu\",\"box\":\"styles_box__3Ir5q\",\"rocks\":\"styles_rocks__2isz-\",\"player\":\"styles_player__2QEYS\",\"food\":\"styles_food__3D3mH\",\"enemy\":\"styles_enemy__3Vlea\",\"controls\":\"styles_controls__2DmDj\",\"left\":\"styles_left__3IHEM\",\"right\":\"styles_right__32csK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"styles_game__17WmQ\",\"board\":\"styles_board__TUIlq\",\"active\":\"styles_active__IN9g0\"};","import React, { Component } from 'react';\nimport Matter, {\n    Engine,\n    Render,\n    World,\n    Bodies,\n    Body\n} from \"matter-js\";\n\n// const Image = [\n//     \"https://assets.myntassets.com/assets/images/retaillabs/2020/4/20/5e2845e9-4852-4e71-b1eb-17bdf0bdc9641587378733744-stand.png\",\n//     \"https://assets.myntassets.com/assets/images/retaillabs/2020/4/20/882d0ad7-43b2-4ac0-a021-42b5884c35861587378732565-jump.png\"\n// ]\nconst Image = [\n    \"https://assets.myntassets.com/assets/images/retaillabs/2020/4/21/a670f7e5-7dbd-45b6-a3e7-7ed87d61aef21587488311633-stand1.png\",\n    \"https://assets.myntassets.com/assets/images/retaillabs/2020/4/21/595f5b66-c34a-4b33-842c-c76eea598e511587488312734-jump1.png\"\n]\n\nlet imgIndex = 0;\nconst slab1Position = { x: 0, y: 100 }\nconst slab2Position = { x: 0, y: 280 }\n\n\nclass Slab {\n    constructor(engine, position, positionIndex){\n        this.myEngine = engine;\n        this.body = Bodies.rectangle(window.innerWidth / 2, window.innerHeight - position.y, 120, 25, { isStatic: true });\n        World.add(this.myEngine.world, [this.body]);\n        this.position = positionIndex;\n    }\n\n    movement = true;\n\n    moveSlab(){\n        let slab = this.body;\n        let direction = 1;\n        let move = () => {\n            if (direction == 1) {\n                Body.translate(slab, { x: 3, y: 0 })\n                if (slab.position.x > window.innerWidth)\n                    direction = -1;\n            }\n            else {\n                Body.translate(slab, { x: -3, y: 0 })\n                if (slab.position.x < 0)\n                    direction = 1;\n            }\n            if (this.movement)\n                requestAnimationFrame(move)\n        }\n        requestAnimationFrame(move);\n    }\n\n    position = 0;\n\n    changePosition = () => {\n        this.position++;\n        let pos = (this.position)%3;\n        // console.log(pos);\n\n        if(pos == 0) {\n            // position bottom\n            this.movement = false;\n            let diff = slab2Position.y - slab1Position.y;\n            this.moveTo(diff)\n        }\n        else if(pos == 1) {\n            // position hide\n        this.movement = false;\n        let diff = slab1Position.y + 10;\n        this.moveTo(diff)\n\n        setTimeout(() => {\n            this.changePosition()\n        }, 1200);\n        }\n        else if(pos == 2) {\n            // position top\n            this.movement = true;\n            this.moveSlab()\n            Body.setPosition(this.body, {x: 0, y: 0})\n            let diff = window.innerHeight - slab2Position.y;\n            this.moveTo(diff)\n        }\n    }\n\n    moveTo (diff) {\n        let slab = this.body;\n        let moveDown = () => {\n            diff--;\n            Body.translate(slab, { x: 0, y: 1 })\n            if (diff > 0)\n                requestAnimationFrame(moveDown)\n            // else\n            //     this.bringFromTopSlab1()\n            // console.log(diff)\n        }\n        requestAnimationFrame(moveDown)\n    }\n}\n\nclass Jump extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            score: 0,\n            intro: true\n        }\n    }\n\n    myEngine = null;\n    myRender = null;\n    myWorld = null;\n    myPlayer = null;\n\n    isJumping = false;\n\n\n\n    slab = null;\n    slab1 = null;\n    slab2 = null;\n\n    componentDidMount() {\n\n        setTimeout(() => {\n            this.setState({intro: false})\n        }, 5000);\n\n        this.myEngine = Engine.create();\n\n        this.myRender = Render.create({\n            element: this.ele,\n            engine: this.myEngine,\n            options: {\n                width: window.innerWidth,\n                height: window.innerHeight,\n                background: 'transparent',\n                wireframes: false\n                // wireframes: true\n            }\n        });\n\n\n        Engine.run(this.myEngine);\n        Render.run(this.myRender);\n\n        this.createLevel()\n    }\n\n    createLevel = () => {\n        // this.createCompound()\n        let boxA = Bodies.rectangle(window.innerWidth / 2, window.innerHeight - slab1Position.y - 100, 50, 70, {\n            // isSensor: false, \n            inertia: Infinity,\n            // isStatic: false, frictionStatic: 0, restitution: 0,\n            render: {\n                sprite: {\n                    texture: Image[imgIndex],\n                    xScale: 0.16,\n                    yScale: 0.16\n                }\n            }\n        });\n\n        this.myPlayer = boxA;\n        World.add(this.myEngine.world, [boxA]);\n\n        document.addEventListener('keydown', this.jumpme);\n        document.addEventListener('click', this.jumpme);\n        \n        this.slab1 = new Slab(this.myEngine, slab1Position, 0);\n        \n        this.slab2 = new Slab(this.myEngine, slab2Position, 2);\n        this.slab2.moveSlab()\n        \n        this.slab = this.slab2;\n\n        let checkDead = () => {\n            if(this.isDead())\n            alert('dead')\n            else\n            requestAnimationFrame(checkDead)\n        }\n        requestAnimationFrame(checkDead)\n\n        // setTimeout(() => {\n        //     Body.setVelocity(boxA, { x: 9, y: 13 });\n        // }, 2000);\n    }\n\n    createCompound = () => {\n        let wallTop = Bodies.rectangle(window.innerWidth / 2, 0, window.innerWidth, 60, { isStatic: true });\n        let wallBottom = Bodies.rectangle(window.innerWidth / 2, window.innerHeight, window.innerWidth, 60, { isStatic: true });\n        let wallLeft = Bodies.rectangle(0, window.innerHeight/2, 60, window.innerHeight, { isStatic: true });\n        let wallRight = Bodies.rectangle(window.innerWidth, window.innerHeight/2, 60, window.innerHeight, { isStatic: true });\n\n        World.add(this.myEngine.world, [wallBottom, wallLeft, wallRight, wallTop]);\n    }\n\n    jumpme = (e) => {\n        // console.log(` ${e.code}`);\n        if (this.isJumping) return;\n        this.isJumping = true;\n        let boxA = this.myPlayer\n        let slab = this.slab.body\n        boxA.render.sprite.texture = Image[1];\n        setTimeout(() => {\n            resetPlayer()\n        }, 1000);\n        Body.setVelocity(boxA, { x: 0, y: -13 });\n\n        let resetPlayer = () => {\n            Body.set(boxA, 'isSensor', false)\n            boxA.render.sprite.texture = Image[0];\n            this.isJumping = false;\n        }\n\n        // Body.set(boxA, 'isSensor', true)\n        let checkDirection = () => {\n            if (boxA.velocity.y > 0) {\n                if (this.isSlabColliding()) {\n                    Body.set(boxA, 'isSensor', false)\n                    // Body.set(boxA, 'isStatic', true)\n                    // console.log('collided')\n                    this.setState({score : this.state.score+10})\n                    this.slabCollided()\n                    resetPlayer()\n                    // this.isJumping = false;\n\n                    let pos = {\n                        x: boxA.position.x,\n                        // y: this.slab.bounds.min.y - ((boxA.bounds.max.y - boxA.bounds.min.y)/2) - 15 \n                        y: slab.bounds.min.y - 75\n                    }\n                    // Body.setPosition(boxA, pos)\n\n                }\n            }\n            if (this.isJumping)\n                requestAnimationFrame(checkDirection);\n        }\n        requestAnimationFrame(checkDirection);\n\n\n        let dist = 1;\n        let up = true;\n        let _self = this;\n        // let move = () => {\n        //     if (up && dist < 40) {\n        //         Body.set(boxA, 'isStatic', true)\n        //         dist++;\n        //         Body.translate(boxA, { x: 0, y: -5 });\n        //         requestAnimationFrame(move);\n        //     } else {\n        //         //  Body.setVelocity(boxA, { x: 0, y: -1 });\n        //         // Body.set(boxA, 'isSensor', false)\n        //         Body.set(boxA, 'isStatic', true)\n        //         if (_self.isSlabColliding()) {\n        //             console.log('collided')\n        //             // Body.setStatic(boxA, true)\n        //             // Body.setStatic(_self.slab, true)\n\n        //             //     if(boxA.position.y < slab.position.y && boxA.bounds.min.x > slab.bounds.min.x && boxA.bounds.max.x < slab.bounds.max.x)\n        //             //         console.log('center')\n\n        //             this.slab1Move = !this.slab1Move; \n        //             this.slab2Move = !this.slab2Move; \n        //         } else {\n        //             up = false;\n        //             dist--;\n        //             Body.translate(boxA, { x: 0, y: 5 });\n        //             if (dist > 0)\n        //                 requestAnimationFrame(move);\n        //         }\n        //     }\n        //     // else if (dist > 0) {\n        //     //     dist--;\n        //     //     Body.translate(boxA, {x: 0, y: boxA.position.y+dist})\n        //     // }\n\n        //     // requestAnimationFrame(move)\n        // }\n        // requestAnimationFrame(move)\n\n    }\n\n\n    isSlabColliding = () => {\n        let boxA = this.myPlayer\n        let slab = this.slab.body\n\n        // console.log('is', boxA, slab)\n        let collision = Matter.SAT.collides(slab, boxA);\n\n        // console.log('coll', collision.collided,\n        //     boxA.position.y < slab.position.y && boxA.bounds.min.x > slab.bounds.min.x && boxA.bounds.max.x < slab.bounds.max.x\n        // );\n\n        // console.log(\n        //     (boxA.bounds.max.y-4) < slab.bounds.min.y\n        //     , boxA.position.y < slab.position.y\n        //     ,boxA.position.x >= slab.bounds.min.x \n        //     ,boxA.position.x <= slab.bounds.max.x\n        // )\n        return (\n            // collision.collided\n            // ||\n            (boxA.bounds.max.y-4) < slab.bounds.min.y\n            &&  boxA.position.y < slab.position.y\n            && boxA.position.x >= slab.bounds.min.x \n            && boxA.position.x <= slab.bounds.max.x\n        )\n    }\n\n    isDead = () => {\n        let boxA = this.myPlayer\n        let { x, y } = boxA.position \n        // console.log(\n        //     x < 0  //left\n        //     ,x > window.innerWidth //right\n        //     ,y > window.innerHeight //bottom\n        // )\n        return (\n            x < 0  //left\n            || x > window.innerWidth //right\n            || y > window.innerHeight //bottom\n            // && boxA.position.x <= slab.bounds.max.x\n        )\n    }\n\n    slabCollided = () => {\n        //collided\n        this.slab.movement = false;\n        setTimeout(() => {\n            this.slab1.changePosition()\n            this.slab2.changePosition()\n        }, 1000);\n\n        if(this.slab === this.slab1)\n            this.slab = this.slab2;\n        else\n            this.slab = this.slab1\n    }\n\n    render() {\n        if(this.state.score >= 50) {\n            alert('win')\n        }\n\n\n        const bg = {\n            backgroundImage: `url('https://assets.myntassets.com/assets/images/retaillabs/2020/4/21/0a883011-5808-44b5-9ef3-ab4395af3c881587491196565-Untitled.jpg')`,\n            backgroundSize: '100% 100%'\n        }\n        const score = {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            textAlign : 'center',\n            background: 'black',\n            color: 'white',\n            width: '150px',\n            margin: 'auto',\n            padding: '5px'\n        }\n        return (\n\n            <div style={bg}>\n                <div style={score}>\n                    Score : {this.state.score}\n                </div>\n                {/* Arrow */}\n                <div ref={ref=>this.ele=ref}></div>\n\n                \n                {\n                this.state.intro &&\n                <div\n                style={{...score, top: '30%', width: '80%', padding: '20px', background: 'grey', border: '2px solid black', color: 'white'}}\n                >\n                    Jump 5 slabs to get 50 points to complete the game.\n                    <br></br>\n                    If you get to the spikes, you are dead and game over.\n                    <br></br>\n                    This will hide in 5 seconds.\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default Jump;","import React, { Component } from 'react';\nimport Matter, {\n    Engine,\n    Render,\n    World,\n    Bodies,\n    Body,\n    Constraint,\n    Mouse,\n    MouseConstraint,\n    Events\n} from \"matter-js\";\n\n\nconst Height = window.innerHeight;\nconst Width = window.innerWidth;\nconst isSmall = Height < 660;\n\nclass ScoreOject {\n    constructor(myEngine, myRender) {\n        this.myEngine = myEngine;\n        this.myRender = myRender;\n\n        this.posY = \n        isSmall? \n        Math.floor((Math.random() * 100) + 20):\n        Math.floor((Math.random() * 200) + 100);\n\n        this.body = Bodies.circle(30, this.posY, 20, \n            { \n                isStatic: true, \n                label: 'score',\n                render: {\n                    fillStyle: \"#\"+((1<<24)*Math.random()|0).toString(16)\n                }\n            });\n        World.add(this.myEngine.world, [this.body]);\n        this.move();\n    }\n\n    move = () => {\n        let diff = Width;\n        let move = () => {\n            diff--;\n            Body.translate(this.body, { x: 2, y: 0 })\n            if (diff < 0) {\n                diff = Width;\n                if(!this.body.isStatic) Body.set(this.body, 'isStatic', true)\n                if(this.body.isSensor) Body.set(this.body, 'isSensor', false)\n                Body.setPosition(this.body, { x: 30, y: this.posY })\n            }\n            requestAnimationFrame(move)\n        }\n        requestAnimationFrame(move)\n    }\n}\nclass Sling extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            score: 0\n        }\n    }\n\n    myEngine = null;\n    myRender = null;\n    myWorld = null;\n\n\n    componentDidMount() {\n        this.myEngine = Engine.create();\n\n        this.myRender = Render.create({\n            element: this.ele,\n            engine: this.myEngine,\n            options: {\n                width: window.innerWidth,\n                height: window.innerHeight,\n                background: 'transparent',\n                wireframes: false\n                // wireframes: true\n            }\n        });\n\n\n        Engine.run(this.myEngine);\n        Render.run(this.myRender);\n\n        // add bodies\n        let \n            rockPosY = isSmall ? Height-200 : Height-200,\n            rockOptions = { density: 0.004, label: 'rock' },\n            rock = Bodies.polygon(200, rockPosY, 8, 20, rockOptions),\n            elastic1 = Constraint.create({\n                pointA: { x: 100, y: rockPosY },\n                bodyB: rock,\n                stiffness: 0.05,\n                render: { type: 'line', strokeStyle: '#304251' }\n            }),\n            elastic2 = Constraint.create({\n                pointA: { x: 300, y: rockPosY },\n                bodyB: rock,\n                stiffness: 0.05,\n                render: { type: 'line', strokeStyle: '#304251' }\n            });\n\n        World.add(this.myEngine.world, [rock, elastic1, elastic2]);\n\n\n        // add mouse control\n        var mouse = Mouse.create(this.myRender.canvas),\n            mouseConstraint = MouseConstraint.create(this.myEngine, {\n                mouse: mouse,\n                constraint: {\n                    stiffness: 0.2,\n                    render: {\n                        visible: false\n                    }\n                }\n            });\n\n        World.add(this.myEngine.world, mouseConstraint);\n\n        // keep the mouse in sync with rendering\n        this.myRender.mouse = mouse;\n\n        let _self = this;\n        Events.on(this.myEngine, 'afterUpdate', function () {\n            if (mouseConstraint.mouse.button === -1 && (rock.position.y < rockPosY)) {\n                rock = Bodies.polygon(200, rockPosY, 8, 20, rockOptions);\n                World.add(_self.myEngine.world, rock);\n                elastic1.bodyB = rock;\n                elastic2.bodyB = rock;\n            }\n        });\n\n\n        // fit the render viewport to the scene\n        // Render.lookAt(render, {\n        //     min: { x: 0, y: 0 },\n        //     max: { x: 800, y: 600 }\n        // });\n\n\n        for (let i = 0; i < 10; i++) {\n            setTimeout(() => {\n                new ScoreOject(this.myEngine, this.myRender);\n            }, i * 1000);\n        }\n\n        Events.on(this.myEngine, \"collisionStart\", (e)=>{\n            let pairs = e.pairs;\n            let {bodyA, bodyB} = pairs[0];\n            if(\n            bodyA.isSensor || bodyB.isSensor\n            ) return;\n            // console.log(e);\n            // console.log(\"Pair no visible: \", pairs)\n            // console.log(\"Pair visible: \", pairs[0]);\n            // console.log(\"colision between \" + pairs[0].bodyA.label + \" - \" + pairs[0].bodyB.label);       \n\n            Body.set(pairs[0].bodyA, \"isStatic\", false);\n            Body.set(pairs[0].bodyB, \"isStatic\", false);\n            Body.set(pairs[0].bodyA, \"isSensor\", true);\n            Body.set(pairs[0].bodyB, \"isSensor\", true);\n            Body.setVelocity(bodyA, { x: 0, y: 2 });\n            Body.setVelocity(bodyB, { x: 0, y: 2 });\n            \n            this.setState({score: this.state.score+10 })\n        })\n\n    }\n\n    render() {\n        const bg = {\n            backgroundImage: `url('https://cdn.dribbble.com/users/375867/screenshots/3200773/shady-forest-game-background.png')`,\n            backgroundSize: '100% 100%'\n        }\n        const score = {\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            textAlign : 'center',\n            background: 'black',\n            color: 'white',\n            width: '150px',\n            margin: 'auto',\n            padding: '5px'\n        }\n        return (\n            <div style={bg}>\n                <div style={score}>\n                    Score : {this.state.score}\n                </div>\n                <div ref={ref=>this.ele=ref}></div>\n            </div>\n        );\n    }\n}\n\nexport default Sling;","import React, { Component } from 'react';\n\nimport styles from './styles.module.scss';\n\n\nconst Side = 30;\nconst Boundary = {\n    top: 0,\n    left: 0,\n    // right: Math.floor(window.innerWidth/Side),\n    right: 10,\n    bottom: 10\n}\n\nconst Food = [[1,1], [3,4], [2,8], [9,9]];\n\nclass Snake extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            snake: [\n                [4, 5], [5, 5], [6, 5]\n            ],\n            direction: 'left', //up, down, left, right\n            canMove: true,\n            ate: 0\n        }\n    }\n\n    componentDidMount() {\n        let loopMe = setInterval(() => {\n            if (this.state.canMove)\n                this.checkMove();\n            else\n                clearInterval(loopMe)\n        }, 1000);\n    }\n\n    checkMove = () => {\n        let { snake } = this.state;\n        if (this.isHittingBoundary(snake[0])) {\n            console.log('hit'); \n            this.setState({ canMove: false });\n            alert('You Got Hit')\n        }\n        else if (this.isOverlap()) {\n            console.log('overlap'); \n            this.setState({ canMove: false });\n            alert('You Ate Yourself')\n        }\n        else {\n            if(this.state.ate === Food.length) \n            {\n                this.setState({ canMove: false });\n                alert('Level Completed');\n            }\n            else\n            this.move()\n        }\n    }\n\n    isHittingBoundary = (first) => {\n        console.log(first)\n        if (first[1] === Boundary.top)\n            return true\n        else if (first[0] === Boundary.left)\n            return true\n        else if (first[0] === Boundary.right)\n            return true\n        else if (first[1] === Boundary.bottom)\n            return true\n        return false\n    }\n\n    checkIsFood = (position) => {\n        let { ate } = this.state;\n        if(Food[ate][0]===position[0] && Food[ate][1]===position[1])\n            return true\n        else  \n            return false\n    }\n\n    isOverlap = () => {\n        const {snake} = this.state;\n        for(let i=1; i < snake.length; i++)\n            if(snake[i][0]===snake[0][0] && snake[i][1]===snake[0][1])\n                return true\n        return false\n    }\n\n    move = () => {\n        let { snake, direction } = this.state;\n        let first = snake[0];\n\n        \n        console.log(direction)\n        if (direction === 'up')\n        snake.unshift([first[0], first[1] - 1])\n        else if (direction === 'down')\n        snake.unshift([first[0], first[1] + 1])\n        else if (direction === 'left')\n        snake.unshift([first[0] - 1, first[1]])\n        else if (direction === 'right')\n        snake.unshift([first[0] + 1, first[1]])\n        \n        if(this.checkIsFood(first)){\n            this.setState({ snake, ate: this.state.ate+1 });\n        }else{\n            snake.pop();\n            this.setState({snake});\n        }\n    }\n\n    getStyle = (i, j) => {\n        let obj = {\n            top: j * Side,\n            left: i * Side,\n            width: Side,\n            height: Side\n        }\n        return obj\n    }\n\n    getBoundary = () => {\n        const { top, left, right, bottom } = Boundary;\n        let bounds = []\n        //gen top box ele\n        for (let i = left+1; i < right; i++) \n            bounds.push(<div className={[styles.box, styles.rocks].join(' ')} style={this.getStyle(i, top)} />)\n        //gen bottom box ele\n        for (let i = left+1; i < right; i++) \n            bounds.push(<div className={[styles.box, styles.rocks].join(' ')} style={this.getStyle(i, bottom)} />)\n        //gen left box ele\n        for (let i = top+1; i < bottom; i++) \n            bounds.push(<div className={[styles.box, styles.rocks].join(' ')} style={this.getStyle(left, i)} />)\n        //gen right box ele\n        for (let i = top+1; i < bottom; i++) \n            bounds.push(<div className={[styles.box, styles.rocks].join(' ')} style={this.getStyle(right, i)} />)\n\n            console.log(bounds.length)\n    return (\n        <>\n            {bounds}\n        </>\n        )\n    }\n\n    setDirection = (direction) => {\n        this.setState({ direction })\n    }\n\n    render() {\n        const { snake, direction, ate } = this.state;\n\n        console.log(direction, snake)\n        const bg = {\n            backgroundImage: `url('https://static.vecteezy.com/system/resources/previews/000/120/896/non_2x/beautiful-illustrations-of-tropical-jungle-and-liana-vector.jpg')`,\n            backgroundSize: '100% 100%'\n        }\n\n        const score = {\n            // position: 'fixed',\n            // top: 0,\n            // left: 0,\n            // right: 0,\n            textAlign : 'center',\n            background: 'black',\n            color: 'white',\n            width: '150px',\n            // margin: 'auto',\n            marginBottom: '20px',\n            padding: '5px'\n        }\n\n        const disabled = {\n            pointerEvents: 'none',\n            opacity: 0.6\n        }\n        return (\n            <div className={styles.game} style={bg}>\n                <div style={score}>Food : {ate} / {Food.length}</div>\n                <div className={styles.board} style={{width: (Boundary.right+1)*Side, height: (Boundary.bottom+1)*Side}}>\n                    {\n                        snake.map(arr =>\n                            <div className={[styles.box, styles.snake].join(' ')} style={this.getStyle(arr[0], arr[1])}>\n                                s\n                            </div>\n                        )\n                    }\n                    {this.getBoundary()}\n                    {\n                        ate < Food.length &&\n                        <div className={[styles.box, styles.food].join(' ')} style={this.getStyle(Food[ate][0], Food[ate][1])}>\n                          f\n                       </div>\n                    }\n                </div>\n                <div className={styles.controls}>\n                    <div className={styles.up} style={direction==='down'?disabled: {}} onClick={()=>this.setDirection('up')}>up</div>\n                    <div className={styles.left} style={direction==='right'?disabled: {}} onClick={()=>this.setDirection('left')}>Left</div>\n                    <div className={styles.right} style={direction==='left'?disabled: {}} onClick={()=>this.setDirection('right')}>right</div>\n                    <div className={styles.down} style={direction==='up'?disabled: {}} onClick={()=>this.setDirection('down')}>down</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Snake;","import React, { Component } from 'react';\n\nimport styles from './styles.module.scss';\n\n\nconst Len = 10;\nconst Side = 30;\nconst Boundary = {\n    top: 0,\n    left: 0,\n    // right: Math.floor(window.innerWidth/Side),\n    right: 9,\n    bottom: 9\n}\n\n\nclass Pacman extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            board: Array.from(Array(Len).fill('0'), () => new Array(Len).fill('0')),\n            direction: 'left',\n            player: [5, 5],\n            canMove: true,\n            blocks: [\n                [2, 2], [2, 3], [2, 4], [2, 5],\n                [2, 7], [3, 7], [4, 7],\n                [4, 4], [5, 4], [7, 4],\n                [7, 2], [6, 2], [5, 2], [4, 2], [5, 1],\n                [6, 6], [6, 7], [7, 6], [7, 7]\n            ],\n            enemy: \n                {\n                index: 0,\n                path: [\n                    [1, 1], [1, 2], [1, 3], [1, 4], [1, 5], [1, 6], [1, 7], [1, 8]\n                ]\n            }, // lets make it as array for more\n            count: 0\n        }\n    }\n\n    componentDidMount() {\n        this.constructBoundary();\n        this.fillBlocks()\n\n        let loopMe = setInterval(() => {\n            if (this.state.canMove) {\n                this.enemy();\n                this.move();\n            }\n            // else\n            //     clearInterval(loopMe)\n        }, 500);\n    }\n\n    constructBoundary = () => {\n        const { top, left, right, bottom } = Boundary;\n        let { board } = this.state;\n\n        //gen top box ele\n        for (let i = left + 1; i < right; i++)\n            board[i][top] = 'B'\n        //gen bottom box ele\n        for (let i = left + 1; i < right; i++)\n            board[i][bottom] = 'B'\n        //gen left box ele\n        for (let i = top + 1; i < bottom; i++)\n            board[left][i] = 'B'\n        //gen right box ele\n        for (let i = top + 1; i < bottom; i++)\n            board[right][i] = 'B'\n\n        this.setState({ board })\n    }\n\n    fillBlocks = () => {\n        let { board, blocks } = this.state;\n\n        blocks.map(e => board[e[0]][e[1]] = 'B');\n\n        this.setState({ board });\n    }\n\n    enemy = () => {\n        let player = this.state.player;\n        let enemy = {...this.state.enemy};\n        let { index, path } = enemy;\n\n        index = (index + 1) % path.length;\n\n        if (enemy.path[enemy.index][0]===player[0] && enemy.path[enemy.index][1]===player[1]) {\n            this.setState({canMove: false})\n            console.log('Enemy')\n            alert('died')\n        }else\n        this.setState({ enemy: { index, path } })\n    }\n\n    move = () => {\n        let { direction } = this.state;\n        let player = [...this.state.player]\n\n        // upadte player position\n        if (direction === 'up')\n            player[1]--\n        else if (direction === 'down')\n            player[1]++\n        else if (direction === 'left')\n            player[0]--\n        else if (direction === 'right')\n            player[0]++\n\n        this.updateMove(player)\n    }\n\n    updateMove = (player) => {\n        let { board, count } = this.state;\n\n        let val = board[player[0]][player[1]];\n\n        if (val === '0') {\n            board[player[0]][player[1]] = ' ';\n            count++;\n            this.setState({ player, board, count });\n        }\n        else if(val ===' '){\n            this.setState({ player, board });\n        }\n        else if (val === 'B') {\n            console.log('Block')\n        }\n    }\n\n    getStyle = (i, j) => {\n        let obj = {\n            top: j * Side,\n            left: i * Side,\n            width: Side,\n            height: Side\n        }\n        return obj\n    }\n\n    isPlayer = (i, j) => {\n        const { player } = this.state;\n\n        if (i === player[0] && j === player[1])\n            return true;\n        return false;\n    }\n\n    isPlayer = (i, j) => {\n        const { player } = this.state;\n\n        if (i === player[0] && j === player[1])\n            return true;\n        return false;\n    }\n    isEnemy = (i, j) => {\n        const { index, path } = this.state.enemy;\n\n        if (i === path[index][0] && j === path[index][1])\n            return true;\n        return false;\n    }\n\n\n    setDirection = (direction) => {\n        this.setState({ direction, canMove: true })\n    }\n\n    getBlock = (val, i, j) => {\n        if (this.isPlayer(i, j))\n        return <div className={[styles.box, styles.player].join(' ')} style={this.getStyle(i, j)}>P</div>\n        if (this.isEnemy(i, j))\n        return <div className={[styles.box, styles.enemy].join(' ')} style={this.getStyle(i, j)}>E</div>\n        if (val === '0')\n            return <div className={[styles.box, styles.food].join(' ')} style={this.getStyle(i, j)}>0</div>\n        if (val === 'B')\n            return <div className={[styles.box, styles.rocks].join(' ')} style={this.getStyle(i, j)}>B</div>\n    }\n\n    render() {\n        const { board, count } = this.state;\n        const bg = {\n            backgroundImage: `url('https://s3.envato.com/files/234687569/Halloween%20Game%20Background/Halloween%20BG%2001/Halloween%20Background%2001.png')`,\n            backgroundSize: '100% 100%'\n        }\n        const score = {\n            // position: 'fixed',\n            // top: 0,\n            // left: 0,\n            // right: 0,\n            textAlign : 'center',\n            background: 'black',\n            color: 'white',\n            width: '150px',\n            // margin: 'auto',\n            marginBottom: '20px',\n            padding: '5px'\n        }\n\n        return (\n            <div className={styles.game} style={bg}>\n                <div style={score}>Count : {count}</div>\n                <div className={styles.board} style={{ width: Len * Side, height: Len * Side }}>\n                    {\n                        board.map((rows, i) =>\n                            rows.map((cols, j) =>\n                                this.getBlock(cols, i, j)\n                            )\n                        )\n                    }\n                </div>\n                <div className={styles.controls}>\n                    <div className={styles.up} onClick={() => this.setDirection('up')}>up</div>\n                    <div className={styles.left} onClick={() => this.setDirection('left')}>Left</div>\n                    <div className={styles.right} onClick={() => this.setDirection('right')}>right</div>\n                    <div className={styles.down} onClick={() => this.setDirection('down')}>down</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Pacman;","import React, { Component } from 'react';\nimport styles from './styles.module.scss';\n\nconst Width = 50;\n\nclass Wordament extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            board: [\n                'A', 'B', 'C',\n                'D', 'E', 'F', \n                'G', 'H', 'I'\n            ],\n            length: 3,\n            words: ['BAD', 'BED', 'HI'],\n            filled: '',\n            active: [],\n            touching: false,\n            found: 0\n         }\n    }\n\n    fillWords = (letter, i)=>{\n        let { filled, active, touching } = this.state;\n        if(!touching || active.includes(i) || i===\"\" || i===null || i<0) return;\n        filled+=letter;\n        if(!active.includes(i))\n        active.push(i);\n        this.setState({filled, active})\n    }\n\n    getElement = (e)=>{\n        // console.log(e.touches[0]);\n        // const {pageX, pageY} = e.touches[0];\n        // let ele = document.elementFromPoint(pageX, pageY);\n        const {clientX, clientY} = e.touches[0];\n        let ele = document.elementFromPoint(clientX, clientY);\n        if(ele)\n        this.fillWords(ele.innerText, ele.id)\n    }\n\n    startTouch = ()=>{\n        this.setState({touching: true})\n    }\n\n    endTouch = ()=>{\n        this.setState({touching: false})\n        this.checkWord()\n    }\n\n    checkWord = ()=>{\n        let { words, active, filled, found } = this.state;\n        if(words.includes(filled))\n            found++;\n        this.setState({filled: '', active: [], found})\n        if(found === words.length)\n            alert('completed')\n    }\n\n    render() { \n        const { board, length, words, filled, touching, active, found } = this.state;\n        console.log(this.state)\n        const score = {\n            // position: 'fixed',\n            // top: 0,\n            // left: 0,\n            // right: 0,\n            textAlign : 'center',\n            background: 'black',\n            color: 'white',\n            width: '150px',\n            // margin: 'auto',\n            marginBottom: '20px',\n            padding: '5px'\n        }\n\n        const bg = {\n            backgroundImage: `url('https://img.freepik.com/free-vector/abstract-technology-particle-background_52683-25766.jpg')`,\n            backgroundSize: '100% 100%'\n        }\n\n        return ( \n            <div style={bg} className={styles.game}>\n                <div style={score}>Score : {found} / {words.length}</div>\n                <div \n                className={styles.board} style={{width: Width*length}}\n                onTouchStart={()=>this.startTouch()}\n                onTouchEnd={()=>this.endTouch()}\n                onTouchMove={(e)=>this.getElement(e)}\n                >\n                    {\n                        board.map((e, i)=>\n                            <div \n                            style={{width: Width, height: Width}} \n                            className={active.includes(i.toString())?styles.active: null}\n                            onMouseEnter={()=>this.fillWords(e, i)}\n                            onTouchMove={()=>this.fillWords(e, i)}\n                            // onMouseMove={()=>this.fillWords(e, i)}\n                            // onClick={()=>this.fillWords(e, i)}\n                            key={i}\n                            id={i}\n                            >\n                            {e}\n                            </div>\n                        )\n                    }\n                </div>\n                {/* {touching}{active} */}\n                {/* {filled} */}\n                {/* {active.toString()} */}\n                Find the words : \n                {\n                    words.toString()\n                }\n            </div>\n         );\n    }\n}\n \nexport default Wordament;","import React, { Component } from 'react';\n\nimport \"./styles.css\";\n\nclass Universe extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    landOn(e) {\n        document.getElementById(\"planets\").classList.add(e)\n        document.getElementById(\"univ\").classList.remove('screenOut')\n        document.getElementById(\"univ\").classList.add('screenZoom')\n    }\n\n    back() {\n        document.getElementById(\"univ\").classList.remove('screenZoom')\n        document.getElementById(\"univ\").classList.add('screenOut')\n\n        setTimeout(() => {\n            document.getElementById(\"univ\").classList.remove('screenOut')\n            document.getElementById(\"planets\").classList.remove('moveToEarth')\n            document.getElementById(\"planets\").classList.remove('moveToMoon')\n            document.getElementById(\"planets\").classList.remove('moveToSaturn')\n        }, 2000);\n    }\n\n    render() {\n        return (\n            <div className=\"universe\" id=\"univ\">\n                <div className=\"planets\" id=\"planets\">\n                    <div onClick={() => this.landOn('moveToEarth')} className=\"planet earth\"></div>\n                    <div onClick={() => this.landOn('moveToMoon')} className=\"planet moon\"></div>\n                    <div onClick={() => this.landOn('moveToSaturn')} className=\"planet saturn\"></div>\n                </div>\n                <div className=\"screen\">\n                    Welcome\n\n                    <div \n                    onClick={()=>this.back()}\n                    >Back</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Universe;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport \"./styles.css\"\n\nconst Data =\n    [\n        {img : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRim4n1U2yfA6StR_2wTP4qGT7fL0XGVtDi9_m14fnCvMSVAJRV&usqp=CAU\", name : \"Batman\"},\n        {img : \"https://i.redd.it/ouc4orbi5pk21.jpg\", name : \"Superman\"},\n        {img : \"https://static-koimoi.akamaized.net/wp-content/new-galleries/2020/04/thor-love-and-thunder-chris-hemsworth-starrer-to-bring-back-this-dead-character-its-not-loki-1.jpg\", name : \"Thor\"},\n        {img : \"https://i.pinimg.com/736x/89/d0/a6/89d0a6cbdf365c6a68479aafcd281d75.jpg\", name:  \"Superman\"}\n    ]\nclass Block extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        return (\n            <div className=\"carousel\">\n                {\n                    Data.map(e=>\n                        <div className=\"element\">\n                            <img src={e.img} />\n                            <div className=\"name\">{e.name}</div>\n                        </div>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nexport default Block;","import React, { Component } from 'react';\nimport \"./styles.css\"\n\nconst Data =\n    [\n        {img : \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRim4n1U2yfA6StR_2wTP4qGT7fL0XGVtDi9_m14fnCvMSVAJRV&usqp=CAU\", name : \"Batman\"},\n        {img : \"https://i.redd.it/ouc4orbi5pk21.jpg\", name : \"Superman\"},\n        {img : \"https://static-koimoi.akamaized.net/wp-content/new-galleries/2020/04/thor-love-and-thunder-chris-hemsworth-starrer-to-bring-back-this-dead-character-its-not-loki-1.jpg\", name : \"Thor\"},\n        {img : \"https://i.pinimg.com/736x/89/d0/a6/89d0a6cbdf365c6a68479aafcd281d75.jpg\", name:  \"Superman\"}\n    ]\nclass Flex extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n    render() {\n        return (\n            <div className=\"flex-carousel\">\n                {\n                    Data.map(e=>\n                        <div className=\"element\">\n                            <img src={e.img} />\n                            <div className=\"name\">{e.name}</div>\n                        </div>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nexport default Flex;","import React, { Component } from 'react';\n\nimport Block from './Block';\nimport Flex from './Flex';\n\nclass Carousel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {  }\n    }\n    render() { \n        return ( \n            <div>\n                <h1>Block</h1>\n                <Block />\n                <h1>Flex</h1>\n                <Flex />\n            </div>\n         );\n    }\n}\n \nexport default Carousel;","import React from 'react';\nimport data from './query_results_full.json'\n\nconst Filter = () => {\n\n    let set = [];\n    let counter = [];\n    const r = data.map(({ screen_url }) => {\n        const [a, b, c, d, e] = screen_url.split('/');\n        if (b === 'growth' || d === 'growth') {\n            const v2 = d === 'growth' ? e : c;\n            const [k] = v2 ? v2.split('?') : ['']\n            const val = `/${b}/` + k;\n            if (!set.includes(val)) {\n                set.push(val)\n                counter[set.length - 1] = 1;\n            }\n            else {\n                const i = set.indexOf(val);\n                counter[i] = counter[i] + 1;\n            }\n        }\n    })\n\n    return (\n        <div>\n            sum : {counter.reduce((a, b) => a + b, 0)}\n            <ol>\n                {\n                    set.map((val, i) => counter[i] >= 0 && <li>{val} - {counter[i]}</li>)\n                }\n            </ol>\n        </div>\n    );\n}\n\nexport default Filter;","import React, { Component } from 'react';\n\nimport './styles.css';\n\nconst getDate = () => {\n    const date = new Date()\n    return `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`\n}\n\nclass LC extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            date: +new Date(),\n            pl: true,\n            script: [\n                {\n                    name: \"Crude Oil\",\n                    hit: [],\n                    value: 1000,\n                    background: 'dimgrey'\n                },\n                {\n                    name: \"Natural Gas\",\n                    hit: [],\n                    value: 1250,\n                    background: 'peachpuff'\n                },\n                {\n                    name: \"Copper\",\n                    hit: [],\n                    value: 2500,\n                    background: 'sandybrown'\n                },\n                {\n                    name: \"Nickel\",\n                    hit: [],\n                    value: 1500,\n                    background: 'whitesmoke'\n                },\n                {\n                    name: \"Zinc\",\n                    hit: [],\n                    value: 5000,\n                    background: 'tan'\n                },\n                {\n                    name: \"Lead\",\n                    hit: [],\n                    value: 5000,\n                    background: 'slategrey'\n                },\n                {\n                    name: \"Aluminium\",\n                    hit: [],\n                    value: 5000,\n                    background: 'steelblue'\n                }\n            ]\n        }\n    }\n\n    updateValue = (index, name, value) => {\n        let { script } = this.state;\n        script[index][name] = value;\n        this.setState({\n            script\n        })\n    }\n\n    onHit = (index, name, type) => {\n        let { script } = this.state;\n\n        let points = 0;\n\n        if (name === 'sl') {\n            points = type === 'buy' ? script[index][name] - script[index]['ba'] : script[index]['sb'] - script[index][name]\n        }\n        else {\n            points = type === 'buy' ? script[index][name] - script[index]['ba'] : script[index]['sb'] - script[index][name]\n        }\n        const value = points * script[index]['value'];\n\n        if (script[index]['hit'].includes(name)) {\n            // remove from array\n            script[index]['hit'] = script[index]['hit'].filter(e => e !== name)\n            // update the pl\n            if (type === 'buy')\n                script[index]['pl'] -= value\n            else\n                script[index]['pl'] += value\n        } else {\n            // add to array\n            script[index]['hit'].push(name);\n            // update the pl\n            script[index]['pl'] = script[index]['pl'] || 0;\n            if (type === 'buy')\n                script[index]['pl'] += value\n            else\n                script[index]['pl'] -= value\n        }\n\n        this.setState({ script })\n    }\n\n    handleSL = (index, name, type) => {\n        let { script } = this.state;\n\n        const points = type === 'buy' ? script[index]['ba'] - script[index]['sl'] : script[index]['sl'] - script[index]['sb']\n        const value = points * script[index]['value'];\n\n        if (script[index]['hit'].includes(name)) {\n            // remove from array\n            script[index]['hit'] = script[index]['hit'].filter(e => e !== name)\n\n            script[index]['pl'] += value\n        }\n        else {\n            // add to array\n            script[index]['hit'].push(name);\n            script[index]['pl'] = script[index]['pl'] || 0;\n            script[index]['pl'] -= value\n        }\n\n        this.setState({ script })\n    }\n\n    render() {\n        const { script, pl } = this.state;\n        console.log(script)\n        return (\n            <div className=\"container\">\n                level chart\n                <div className=\"chart\">\n                    <div className=\"col\" style={{ background: 'seashell' }}>\n                        <div className=\"target\">{getDate()}</div>\n                        <div className=\"target\">Target 3</div>\n                        <div className=\"target\">Target 2</div>\n                        <div className=\"target\">Target 1</div>\n                        <div className=\"target\">Buy Above</div>\n                        <div className=\"target\">Stop Loss</div>\n                        <div className=\"target\">Sell Below</div>\n                        <div className=\"target\">Target 1</div>\n                        <div className=\"target\">Target 2</div>\n                        <div className=\"target\">Target 3</div>\n                        {pl && <div className=\"target\">P / L</div>}\n                    </div>\n                    {\n                        script.map((val, index) =>\n                            <div className=\"col\" style={{ background: val.background }}>\n                                <div>{val.name}</div>\n                                <div><input className={val.hit.includes('bt3') ? 'hit' : undefined} onDoubleClick={() => this.onHit(index, 'bt3', 'buy')} type={'number'} value={val.bt3} onChange={(e) => this.updateValue(index, 'bt3', e.target.value)} /></div>\n                                <div><input className={val.hit.includes('bt2') ? 'hit' : undefined} onDoubleClick={() => this.onHit(index, 'bt2', 'buy')} type={'number'} value={val.bt2} onChange={(e) => this.updateValue(index, 'bt2', e.target.value)} /></div>\n                                <div><input className={val.hit.includes('bt1') ? 'hit' : undefined} onDoubleClick={() => this.onHit(index, 'bt1', 'buy')} type={'number'} value={val.bt1} onChange={(e) => this.updateValue(index, 'bt1', e.target.value)} /></div>\n                                <div><input onDoubleClick={() => this.handleSL(index, 'ba', 'buy')} type={'number'} value={val.ba} onChange={(e) => this.updateValue(index, 'ba', e.target.value)} /></div>\n\n                                <div><input className={val.hit.includes('ba') || val.hit.includes('sb') ? 'sl' : undefined} type={'number'} value={val.sl} onChange={(e) => this.updateValue(index, 'sl', e.target.value)} /></div>\n\n                                <div><input onDoubleClick={() => this.handleSL(index, 'sb', 'sell')} type={'number'} value={val.sb} onChange={(e) => this.updateValue(index, 'sb', e.target.value)} /></div>\n                                <div><input className={val.hit.includes('st1') ? 'hit' : undefined} onDoubleClick={() => this.onHit(index, 'st1', 'sell')} type={'number'} value={val.st1} onChange={(e) => this.updateValue(index, 'st1', e.target.value)} /></div>\n                                <div><input className={val.hit.includes('st2') ? 'hit' : undefined} onDoubleClick={() => this.onHit(index, 'st2', 'sell')} type={'number'} value={val.st2} onChange={(e) => this.updateValue(index, 'st2', e.target.value)} /></div>\n                                <div><input className={val.hit.includes('st3') ? 'hit' : undefined} onDoubleClick={() => this.onHit(index, 'st3', 'sell')} type={'number'} value={val.st3} onChange={(e) => this.updateValue(index, 'st3', e.target.value)} /></div>\n                                {pl && <div><input className=\"pl\" value={val.pl} onChange={(e) => this.updateValue(index, 'pl', e.target.value)} /></div>}\n                            </div>\n                        )\n                    }\n                    {pl && <div className=\"total\">\n                        Total : &nbsp;\n                        {\n                            script.reduce((sum, comm) => sum + (comm.pl || 0), 0)\n                        }\n                    </div>\n                    }\n                    <div className=\"contact\">\n                        Contact : Rakesh 9265279666\n                    </div>\n                </div>\n\n                <button onClick={() => this.setState({ pl: !pl })}>\n                    Toggle pl\n                </button>\n                <div>\n                    targets - double click - target hit\n                    <br />\n                    ba - double click - buy side sl hit\n                    <br />\n                    sb - double click - sell side sl hit\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LC;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\n\nimport './index.css';\n// import App from './App';\n// import App from './intersectionApp';\n// import App from './lottie';\n// import App from './comiccon/App';\n// import App from './context';\n// import App from './video';\n// import App from './lazyimg';\n// import App from './summernote';\n// import App from './imagekit';\nimport Jump from './arrow';\nimport Sling from './sling';\n// import Slick from './slick';\nimport Snake from './snake';\nimport Pacman from './pacman';\nimport wordament from './wordament';\nimport Universe from './universe';\n\n// import Survey from './Survey';\n\nimport * as serviceWorker from './serviceWorker';\nimport Wordament from './wordament';\nimport Carousel from './carousel';\nimport Filter from './filter';\n\nimport LC from './lc';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            page: 'lc'\n         }\n    }\n\n    Intro = () => {\n        return(\n            <div>\n                <button onClick={()=>this.setState({page: 'carousel'})}>Carousel</button>\n                <button onClick={()=>this.setState({page: 'jump'})}>Jump Game</button>\n                <button onClick={()=>this.setState({page: 'sling'})}>Slingshot Game</button>\n                <button onClick={()=>this.setState({page: 'snake'})}>Snake Game</button>\n                <button onClick={()=>this.setState({page: 'pac'})}>Pac man Game</button>\n                <button onClick={()=>this.setState({page: 'word'})}>Wordament</button>\n                <button onClick={()=>this.setState({page: 'universe'})}>Comiccon Universe</button>\n                <b>\n                    From Game <br></br>\n                    to come back to this menu <br></br>\n                    refresh the page\n                </b>\n                <button onClick={()=>this.setState({page: 'filter'})}>filter</button>\n                <button onClick={()=>this.setState({page: 'lc'})}>level chart</button>\n            </div>\n        )\n    }\n    render() { \n        const { page } = this.state;\n        return ( \n            <div>\n                { page=='filter' && <Filter />}\n                { page=='lc' && <LC />}\n                { page=='intro' && this.Intro()}\n                { page=='jump' && <Jump />}\n                { page=='snake' && <Snake />}\n                { page=='sling' && <Sling />}\n                { page=='pac' && <Pacman />}\n                { page=='word' && <Wordament />}\n                { page=='universe' && <Universe />}\n                { page=='carousel' && <Carousel />}\n            </div>\n         );\n    }\n}\n \nexport default App;\nReactDOM.render(\n    <App />\n    // <Carousel />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}